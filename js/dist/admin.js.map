{"version":3,"file":"admin.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,IACzBH,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,mBCAlF,MAAM,EAA+BI,OAAOC,KAAKC,OAAO,a,aCExDC,IAAAA,aAAiBC,IAAI,wBAAyB,WAC5CD,IAAAA,cAAiB,IACV,kBACJE,gBAAgB,CACfC,QAAS,yBACTC,KAAM,UACNC,MAAOL,IAAAA,WAAeM,MAAM,+CAC5BC,KAAMP,IAAAA,WAAeM,MAAM,gDAE5BJ,gBAAgB,CACfC,QAAS,2BACTC,KAAM,SACNC,MAAOL,IAAAA,WAAeM,MAAM,iDAC5BC,KAAMP,IAAAA,WAAeM,MAAM,gDAC3BE,IAAK,EACLC,YAAa,QAEdP,gBAAgB,WAAqB,IAAAQ,EAAA,KAE9BC,EAAYC,KAGZC,EAAOb,IAAAA,MAAUc,IAAI,QAGrBC,EAAuB,WAC3B,IAAMC,EAAeN,EAAKP,QAAQ,6BAAbO,IAAgD,KACrE,IACE,OAAOM,EAAeC,KAAKC,MAAMF,GAAgB,EACnD,CAAE,MAAOG,GAEP,OADAC,QAAQC,MAAM,2CAA4CF,GACnD,EACT,CACF,EAGMG,EAAaP,IAEnB,OAAOQ,EAAE,MAAO,CAAEC,UAAW,cAAgB,CAC3CD,EAAE,QAASvB,IAAAA,WAAeM,MAAM,oDAChCiB,EAAE,MAAO,CAAEC,UAAW,YACpBxB,IAAAA,WAAeM,MAAM,mDAEvBiB,EAAE,MAAO,CACPE,MAAO,gEAEPZ,EAAKa,OAAS,EACVb,EAAKc,IAAI,SAACC,GACR,IAAMC,EAAQC,SAASF,EAAIG,MACrBC,EAAYV,EAAWW,SAASJ,GAGlCK,EAAUN,EAAIO,OAClB,GAAIP,EAAIQ,SACN,IACE,IAAMC,EAAYrC,IAAAA,MAAUsC,QAAQ,OAAQV,EAAIQ,SAASL,MACrDM,IACFH,EAAaG,EAAUF,OAAM,IAAID,EAErC,CAAE,MAAOf,GACP,CAIJ,OAAOI,EAAE,MAAO,CACdC,UAAW,WACXC,MAAO,4DACN,CACDF,EAAE,QAAS,CACTE,MAAO,wDACN,CACDF,EAAE,QAAS,CACTnB,KAAM,WACNmC,QAASP,EACTQ,SAAU,SAASrB,GACjB,IAAMoB,EAAWpB,EAAEsB,OAA4BF,QAG3CG,EAAoB3B,IAEpBwB,EAEGG,EAAkBT,SAASJ,IAC9Ba,EAAkBC,KAAKd,GAIzBa,EAAoBA,EAAkBE,OAAO,SAACb,GAAU,OAAKA,IAAOF,CAAK,GAI3E,IAAMgB,EAAW5B,KAAK6B,UAAUJ,GAChC/B,EAAUR,QAAQ,6BAAlBQ,CAAgDkC,GAGjB,mBAApBlC,EAAUoC,OACnBpC,EAAUoC,QAIZxB,EAAEyB,SAEF5B,QAAQ6B,IAAI,4BAA6B,CACvCpB,MAAAA,EACAU,QAAAA,EACAjB,WAAYoB,GAEhB,IAEFnB,EAAE,OAAQ,CAAEE,MAAO,qBAAuBS,MAGhD,GACAX,EAAE,MAAO,CAAEC,UAAW,YAAcxB,IAAAA,WAAeM,MAAM,kDAGnE,EACJ,E","sources":["webpack://@wszdb/flarum-autolock/webpack/bootstrap","webpack://@wszdb/flarum-autolock/webpack/runtime/compat get default export","webpack://@wszdb/flarum-autolock/webpack/runtime/define property getters","webpack://@wszdb/flarum-autolock/webpack/runtime/hasOwnProperty shorthand","webpack://@wszdb/flarum-autolock/external root \"flarum.core.compat['admin/app']\"","webpack://@wszdb/flarum-autolock/./js/src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","import app from 'flarum/admin/app';\r\n\r\napp.initializers.add('wszdb/flarum-autolock', () => {\r\n  app.extensionData\r\n    .for('wszdb-autolock')\r\n    .registerSetting({\r\n      setting: 'wszdb-autolock.enabled',\r\n      type: 'boolean',\r\n      label: app.translator.trans('wszdb-autolock.admin.settings.enabled_label'),\r\n      help: app.translator.trans('wszdb-autolock.admin.settings.enabled_help'),\r\n    })\r\n    .registerSetting({\r\n      setting: 'wszdb-autolock.threshold',\r\n      type: 'number',\r\n      label: app.translator.trans('wszdb-autolock.admin.settings.threshold_label'),\r\n      help: app.translator.trans('wszdb-autolock.admin.settings.threshold_help'),\r\n      min: 1,\r\n      placeholder: '100',\r\n    })\r\n    .registerSetting(function (this: any) {\r\n      // 保存当前组件的this引用\r\n      const component = this;\r\n      \r\n      // 获取所有标签\r\n      const tags = app.store.all('tags');\r\n      \r\n      // 获取当前豁免标签设置\r\n      const getCurrentExemptTags = () => {\r\n        const settingValue = this.setting('wszdb-autolock.exempt_tags')() || '[]';\r\n        try {\r\n          return settingValue ? JSON.parse(settingValue) : [];\r\n        } catch (e) {\r\n          console.error('[Auto Lock] Failed to parse exempt tags:', e);\r\n          return [];\r\n        }\r\n      };\r\n      \r\n      // 获取当前豁免标签\r\n      const exemptTags = getCurrentExemptTags();\r\n\r\n      return m('div', { className: 'Form-group' }, [\r\n        m('label', app.translator.trans('wszdb-autolock.admin.settings.exempt_tags_label')),\r\n        m('div', { className: 'helpText' }, \r\n          app.translator.trans('wszdb-autolock.admin.settings.exempt_tags_help')\r\n        ),\r\n        m('div', { \r\n          style: 'margin-top: 10px; display: flex; flex-wrap: wrap; gap: 10px;'\r\n        },\r\n          tags.length > 0\r\n            ? tags.map((tag: any) => {\r\n                const tagId = parseInt(tag.id());\r\n                const isChecked = exemptTags.includes(tagId);\r\n                \r\n                // 获取标签名称，如果有父标签则显示为 父标签@子标签\r\n                let tagName = tag.name();\r\n                if (tag.parent()) {\r\n                  try {\r\n                    const parentTag = app.store.getById('tags', tag.parent().id());\r\n                    if (parentTag) {\r\n                      tagName = `${parentTag.name()}@${tagName}`;\r\n                    }\r\n                  } catch (e) {\r\n                    // 忽略父标签获取错误\r\n                  }\r\n                }\r\n                \r\n                return m('div', { \r\n                  className: 'checkbox', \r\n                  style: 'margin-bottom: 8px; white-space: nowrap; flex: 1 1 auto;'\r\n                }, [\r\n                  m('label', {\r\n                    style: 'display: flex; align-items: center; cursor: pointer;'\r\n                  }, [\r\n                    m('input', {\r\n                      type: 'checkbox',\r\n                      checked: isChecked,\r\n                      onchange: function(e: Event) {\r\n                        const checked = (e.target as HTMLInputElement).checked;\r\n                        \r\n                        // 获取当前的豁免标签列表\r\n                        let currentExemptTags = getCurrentExemptTags();\r\n                        \r\n                        if (checked) {\r\n                          // 添加标签ID（避免重复）\r\n                          if (!currentExemptTags.includes(tagId)) {\r\n                            currentExemptTags.push(tagId);\r\n                          }\r\n                        } else {\r\n                          // 移除标签ID\r\n                          currentExemptTags = currentExemptTags.filter((id: number) => id !== tagId);\r\n                        }\r\n                        \r\n                        // 更新设置值\r\n                        const newValue = JSON.stringify(currentExemptTags);\r\n                        component.setting('wszdb-autolock.exempt_tags')(newValue);\r\n                        \r\n                        // 关键修复：调用 dirty() 方法而不是设置属性\r\n                        if (typeof component.dirty === 'function') {\r\n                          component.dirty();\r\n                        }\r\n                        \r\n                        // 触发重绘\r\n                        m.redraw();\r\n                        \r\n                        console.log('[Auto Lock] Tags updated:', {\r\n                          tagId,\r\n                          checked,\r\n                          exemptTags: currentExemptTags\r\n                        });\r\n                      }\r\n                    }),\r\n                    m('span', { style: 'margin-left: 5px;' }, tagName)\r\n                  ])\r\n                ]);\r\n              })\r\n            : m('div', { className: 'helpText' }, app.translator.trans('wszdb-autolock.admin.settings.no_tags_found'))\r\n        )\r\n      ]);\r\n    });\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","app","add","registerSetting","setting","type","label","trans","help","min","placeholder","_this","component","this","tags","all","getCurrentExemptTags","settingValue","JSON","parse","e","console","error","exemptTags","m","className","style","length","map","tag","tagId","parseInt","id","isChecked","includes","tagName","name","parent","parentTag","getById","checked","onchange","target","currentExemptTags","push","filter","newValue","stringify","dirty","redraw","log"],"sourceRoot":""}